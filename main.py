from flask import Flask, render_template # импортировали класс Flask  и ф-цию render_template

'''https://www.youtube.com/watch?v=crUHP8Zo12k'''
app = Flask(__name__)  # Cоздаём экземпляр этого класса.
                       # Первый аргумент - это имя модуля или пакета приложения.
                       # Если вы используете единственный модуль (как в этом примере),
                       # вам следует использовать __name__, потому что в зависимости от того,
                       # запущен ли код как приложение, или был импортирован как модуль,
                       # это имя будет разным

@app.route('/')  # Создаем ДЕКОРАТОР route(),
                 # чтобы сказать Flask, какой из URL должен запускать нашу функцию
@app.route('/home')  # Создание еще одного декоратора позволяет отслеживатьт дополнительный URL-адрес для ф-ции ниже
def index():              # Функция (главной страницы), которой дано имя, используемое также для генерации URL-адресов
    return render_template("index.html")  # для этой конкретной функции, возвращает сообщение,
                          # которое мы хотим отобразить в браузере пользователя


@app.route('/about')  # Декоратор для передачи Flask URL побочной страницы
def about():             # Функция (Побочной страницы)
    return render_template("about.html")  

@app.route('/user/<string:name>/<int:id>')  # Позволяет находить в URL переданные аргументы по заданным типам данных
def user(name, id):                                # Функция (Побочной страницы)
    return "User page: " + name + '-' + str(id)


if __name__ == "__main__":  # Наконец, для запуска локального сервера с нашим приложением,
    app.run(debug=True)     # мы используем функцию run().
                            # Благодаря конструкции if __name__ == '__main__' можно быть уверенным,
                            # что сервер запустится только при непосредственном вызове скрипта из
                            # интерпретатора Python, а не при его импортировании в качестве модуля.
                            # debug - позволяет запускать сервер в режиме разработчика, 
                            # что позволяет серверу перезагружать себя при изменении кода, а также 
                            # при возникновении ошибок сообщит о них
